<!-- MainWindow.xaml: AMIO GamePad Test ToolのメインウィンドウのUI定義 -->
<!-- このファイルは、デジタルスイッチ、アナログジョイスティックの入力表示、およびLED制御のためのUI要素を定義します。 -->
<Window x:Class="AMIOGamePadTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AMIOGamePadTest"
        mc:Ignorable="d"
        Title="AMIO GamePad Tool" Height="280" Width="350">

    <!-- ウィンドウのリソース定義セクション -->
    <Window.Resources>
        <!-- CheckBoxのカスタムスタイル定義 -->
        <!-- このスタイルは、CheckBoxが押されたときに背景色を変化させる視覚的なフィードバックを提供します。 -->
        <Style x:Key="checkBoxStyleTrigger" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <!-- CheckBoxの背景となるBorder要素 -->
                        <Border x:Name="Border" Margin="1" BorderThickness="0" Background="Gray" Padding="10, 5" CornerRadius="4" >
                            <!-- CheckBoxのコンテンツ（テキスト）を表示するTextBlock -->
                            <TextBlock x:Name="TextContent" HorizontalAlignment="Center" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" />
                        </Border>
                        <!-- ControlTemplate内のトリガー定義 -->
                        <!-- CheckBoxのIsCheckedプロパティがTrueになったときにBorderの背景色を変更します。 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="CheckBox.IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="DeepSkyBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- メイングリッドレイアウト -->
    <Grid>
        <!-- UI要素を垂直方向に配置するためのStackPanel -->
        <StackPanel Orientation="Vertical">
            <!-- デバイス接続ステータス表示用のTextBlock -->
            <!-- ConnectionStatusプロパティにバインドされ、デバイスの接続状態を表示します。 -->
            <!-- ConnectionStatusColorプロパティにバインドされ、テキストの色を制御します（例: 赤:未接続, 緑:接続済み）。 -->
            <TextBlock x:Name="ConnectionStatusTextBlock" Text="{Binding ConnectionStatus}" 
                       HorizontalAlignment="Center" Margin="10,5,10,0" 
                       FontWeight="Bold" Foreground="{Binding ConnectionStatusColor}"/>

            <!-- 入力グループボックス：デジタルスイッチとアナログジョイスティックの表示 -->
            <!-- IsEnabledプロパティはIsDeviceConnectedにバインドされ、デバイス接続時にのみ有効になります。 -->
            <GroupBox Margin="10" Padding="5,5,5,5" Header="入力"
                      IsEnabled="{Binding IsDeviceConnected}">
                <Grid>
                    <!-- 入力要素を垂直方向に配置するためのStackPanel -->
                    <StackPanel Orientation="Vertical">
                        <!-- デジタルスイッチの表示セクション -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <!-- 各スイッチのCheckBox。IsCheckedは対応するStateSWxプロパティにOneWayバインドされます。 -->
                            <!-- IsEnabled="False" などでユーザー操作を無効化し、表示専用としています。 -->
                            <CheckBox Content="SW1" Style="{StaticResource checkBoxStyleTrigger}" IsChecked="{Binding Path=StateSW1, Mode=OneWay}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" IsHitTestVisible="False" Focusable="False" IsTabStop="False" />
                            <CheckBox Content="SW2" Style="{StaticResource checkBoxStyleTrigger}" IsChecked="{Binding Path=StateSW2, Mode=OneWay}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" IsHitTestVisible="False" Focusable="False" IsTabStop="False" />
                            <CheckBox Content="SW3" Style="{StaticResource checkBoxStyleTrigger}" IsChecked="{Binding Path=StateSW3, Mode=OneWay}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" IsHitTestVisible="False" Focusable="False" IsTabStop="False" />
                            <CheckBox Content="SW4" Style="{StaticResource checkBoxStyleTrigger}" IsChecked="{Binding Path=StateSW4, Mode=OneWay}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" IsHitTestVisible="False" Focusable="False" IsTabStop="False" />
                        </StackPanel>
                        <!-- アナログジョイスティックの表示セクション -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Label Content="X" Margin="0,5,0,5" FontFamily="Arial" FontSize="16"/>
                            <!-- ジョイスティックX軸の値を表示するTextBox。StateStickXにOneWayバインドされます。 -->
                            <TextBox HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=StateStickX, Mode=OneWay}" Margin="0,5,0,5" Width="120" VerticalAlignment="Center" FontFamily="Arial" FontSize="16" IsReadOnly="True"/>
                            <!-- 読み取り専用に設定 -->
                            <Label Content="Y" Margin="0,5,0,5" FontFamily="Arial" FontSize="16"/>
                            <!-- ジョイスティックY軸の値を表示するTextBox。StateStickYにOneWayバインドされます。 -->
                            <TextBox HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Path=StateStickY, Mode=OneWay}" Margin="0,5,0,5" Width="120" VerticalAlignment="Center" FontFamily="Arial" FontSize="16" IsReadOnly="True"/>
                            <!-- 読み取り専用に設定 -->
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <!-- 出力グループボックス：LED制御コマンドの選択と送信 -->
            <!-- IsEnabledプロパティはIsDeviceConnectedにバインドされ、デバイス接続時にのみ有効になります。 -->
            <GroupBox Margin="10" Padding="5,5,5,5" Header="出力"
                      IsEnabled="{Binding IsDeviceConnected}">
                <Grid>
                    <!-- LED制御要素を水平方向に配置するためのStackPanel -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <!-- LEDコマンドを選択するためのComboBox -->
                        <!-- ItemsSourceはCommandsコレクションにバインドされ、DisplayMemberPathで表示名、SelectedValuePathで実際のコマンド値を指定します。 -->
                        <ComboBox Name="cmbLedCommand" SelectedValuePath="Command" DisplayMemberPath="Name" ItemsSource="{Binding Commands}" SelectedIndex="0" FontFamily="Arial" FontSize="16" Width="120" Margin="0,5,0,5" VerticalContentAlignment="Center" SelectionChanged="cmbLedCommand_SelectionChanged"/>
                        <Label Content="送信コマンド" FontFamily="Arial" FontSize="16" Margin="0,5,0,5" VerticalAlignment="Center"/>
                        <!-- 実際に送信される生コマンドを表示するLabel -->
                        <Label Name="CommandRaw" Content="01 00" FontFamily="Arial" FontSize="16" Margin="0,5,0,5" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>
